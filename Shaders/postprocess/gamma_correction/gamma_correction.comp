#version 450

layout(set=0, binding=0) uniform sampler2D inputHDR;
layout(set=0, binding=1, rgba8) restrict writeonly uniform image2D outputTexture;

layout(local_size_x=32, local_size_y=32, local_size_z=1) in;
void main(void)
{
    vec2 size = imageSize(outputTexture);
	vec2 pixel = gl_GlobalInvocationID.xy;

    if(pixel.x <= size.x && pixel.y <= size.y){
        vec4 hdr = texture(inputHDR, pixel / size);

        hdr = hdr / (hdr + vec4(1.0));
        hdr = pow(hdr, vec4(1.0/2.2));

        imageStore(outputTexture, ivec2(pixel), hdr);
    }
}